// Generated by CoffeeScript 1.8.0
(function() {
  var MemberCtrl;

  MemberCtrl = (function() {
    var config, request;

    function MemberCtrl() {}

    request = require("request");

    config = require("./../config/config.json");

    MemberCtrl.login = function(mobile, passwd, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/member/login?mobile=" + mobile + "&passwd=" + (passwd.toLowerCase());
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    MemberCtrl.memberInfo = function(token, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/member/token?token=" + token;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    MemberCtrl.fulllist = function(ent, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/member/fulllist?ent=" + ent;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    MemberCtrl.weixinBind = function(loginName, pwd, openid, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/member/weixinBind";
      return request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          loginName: loginName,
          pwd: pwd,
          openid: openid
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    return MemberCtrl;

  })();

  module.exports = MemberCtrl;

}).call(this);
