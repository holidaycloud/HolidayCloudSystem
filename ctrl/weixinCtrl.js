// Generated by CoffeeScript 1.8.0
(function() {
  var CouponCtrl, CustomerCtrl, Q, WeixinCtrl, config, request;

  request = require("request");

  config = require("./../config/config.json");

  Q = require("q");

  CustomerCtrl = require("./customerCtrl");

  CouponCtrl = require("./couponCtrl");

  WeixinCtrl = (function() {
    function WeixinCtrl() {}

    WeixinCtrl.jsapiSign = function(ent, posturl, fn) {
      var url;
      url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/jsapisign/" + ent;
      return request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          url: posturl
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    WeixinCtrl.getOpenid = function(ent, code, fn) {
      var url;
      url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/codeAccesstoken/" + ent + "?code=" + code;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    WeixinCtrl.sendCouponTemplate = function(ent, tempId, toUser, couponId, name, entName, useDate, remark, fn) {
      var url;
      url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/sendCouponTemplate/" + ent;
      return request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          tempId: tempId,
          toUser: toUser,
          couponId: couponId,
          name: name,
          entName: entName,
          useDate: useDate,
          remark: remark
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };


    /*
      TODO:浏河临时活动
     */

    WeixinCtrl.check = function(signature, timestamp, nonce, echostr, fn) {
      var url;
      url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/" + global.weixinEnt + "?signature=" + signature + "&timestamp=" + timestamp + "&nonce=" + nonce + "&echostr=" + echostr;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        if (err) {
          return fn(err);
        } else {
          return fn(null, body);
        }
      });
    };

    WeixinCtrl.msg = function(signature, timestamp, nonce, msg, fn) {
      var url;
      url = "" + config.weixin.host + ":" + config.weixin.port + "/weixin/" + global.weixinEnt;
      return request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          signature: signature,
          timestamp: timestamp,
          nonce: nonce,
          msg: msg
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if (res.error === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    WeixinCtrl.event = function(msgObj, fn) {
      var eventType;
      eventType = msgObj.xml.Event[0];
      switch (eventType) {
        case "subscribe":
          if (msgObj.xml.EventKey[0].indexOf("qrscene") > -1) {
            return CustomerCtrl.weixinSubscribeAndCoupon(msgObj.xml.FromUserName[0], msgObj.xml.ToUserName[0], msgObj.xml.EventKey[0], function(err, res) {
              return fn(err, res);
            });
          } else {
            return CustomerCtrl.weixinSubscribe(msgObj.xml.FromUserName[0], function(err, res) {
              return fn(err, res);
            });
          }
          break;
        case "SCAN":
          return CustomerCtrl.weixinCoupon(msgObj.xml.FromUserName[0], msgObj.xml.ToUserName[0], msgObj.xml.EventKey[0], function(err, res) {
            if (err) {
              return fn(null, "<xml>\n<ToUserName><![CDATA[" + msgObj.xml.FromUserName[0] + "]]></ToUserName>\n<FromUserName><![CDATA[" + msgObj.xml.ToUserName[0] + "]]></FromUserName>\n<CreateTime>" + (Date.now()) + "</CreateTime>\n<MsgType><![CDATA[text]]></MsgType>\n<Content><![CDATA[" + err.message + "]]></Content>\n</xml>");
            } else {
              return fn(null, res);
            }
          });
        case "scancode_waitmsg":
          return CouponCtrl.use(msgObj.xml.ScanCodeInfo[0].ScanResult[0], msgObj.xml.FromUserName[0], function(err, res) {
            console.log(err, res);
            if (err) {
              return fn(null, "<xml>\n<ToUserName><![CDATA[" + msgObj.xml.FromUserName[0] + "]]></ToUserName>\n<FromUserName><![CDATA[" + msgObj.xml.ToUserName[0] + "]]></FromUserName>\n<CreateTime>" + (Date.now()) + "</CreateTime>\n<MsgType><![CDATA[text]]></MsgType>\n<Content><![CDATA[" + err.message + "]]></Content>\n</xml>");
            } else {
              return fn(null, "<xml>\n<ToUserName><![CDATA[" + msgObj.xml.FromUserName[0] + "]]></ToUserName>\n<FromUserName><![CDATA[" + msgObj.xml.ToUserName[0] + "]]></FromUserName>\n<CreateTime>" + (Date.now()) + "</CreateTime>\n<MsgType><![CDATA[text]]></MsgType>\n<Content><![CDATA[优惠券:" + res.data.code + "使用成功。\n使用时间:" + (new Date(res.data.useTime).Format("yyyy-MM-dd hh:mm:ss")) + "]]></Content>\n</xml>");
            }
          });
        default:
          return fn(null, "");
      }
    };

    WeixinCtrl.text = function(msgObj, fn) {
      return fn(null, "");
    };

    return WeixinCtrl;

  })();

  module.exports = WeixinCtrl;

}).call(this);
