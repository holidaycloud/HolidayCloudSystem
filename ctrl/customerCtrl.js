// Generated by CoffeeScript 1.8.0
(function() {
  var CustomerCtrl, Marketing, Q, async, config, request;

  request = require("request");

  config = require("./../config/config.json");

  async = require("async");

  Q = require("q");

  Marketing = require("./../config/marketing.json");

  CustomerCtrl = (function() {
    var _getCoupon, _getCustomerInfo;

    function CustomerCtrl() {}

    CustomerCtrl.locations = function(ent, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/customerLocations?ent=" + ent;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res.data);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    CustomerCtrl.updateLocation = function(openid, lat, lon, fn) {
      return async.auto({
        customerInfo: function(cb) {
          var url;
          url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/weixinLogin?ent=" + global.weixinEnt + "&openId=" + openid;
          return request({
            url: url,
            timeout: 3000,
            method: "GET"
          }, function(err, response, body) {
            var error, res;
            if (err) {
              return cb(err);
            } else {
              try {
                res = JSON.parse(body);
                if (res.error === 1) {
                  return cb(new Error(res.errMsg));
                } else {
                  return cb(null, res.data);
                }
              } catch (_error) {
                error = _error;
                return cb(new Error("Parse Error"));
              }
            }
          });
        },
        update: [
          "customerInfo", function(cb, results) {
            var customer, url;
            customer = results.customerInfo;
            url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/updateLocation";
            return request({
              url: url,
              timeout: 3000,
              method: "POST",
              form: {
                id: customer._id,
                lat: lat,
                lon: lon
              }
            }, function(err, response, body) {
              var error, res;
              if (err) {
                return cb(err);
              } else {
                try {
                  res = JSON.parse(body);
                  if ((res.error != null) === 1) {
                    return cb(new Error(res.errMsg));
                  } else {
                    return cb(null, res.data);
                  }
                } catch (_error) {
                  error = _error;
                  return cb(new Error("Parse Error"));
                }
              }
            });
          }
        ]
      }, function(err, results) {
        console.log("----------------------------");
        console.log(err, results);
        console.log("----------------------------");
        return fn(err, results.update);
      });
    };

    CustomerCtrl.list = function(ent, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/fulllist?ent=" + ent;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if ((res.error != null) === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };


    /*
      TODO:浏河临时活动
     */

    CustomerCtrl.detail = function(id, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/detail?id=" + id;
      return request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if (res.error === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    CustomerCtrl.weixinSubscribe = function(openid, fn) {
      var url;
      url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/weixinSubscribe";
      return request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          ent: global.weixinEnt,
          openid: openid
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return fn(err);
        } else {
          try {
            res = JSON.parse(body);
            if (res.error === 1) {
              return fn(new Error(res.errMsg));
            } else {
              return fn(null, res);
            }
          } catch (_error) {
            error = _error;
            return fn(new Error("Parse Error"));
          }
        }
      });
    };

    CustomerCtrl.weixinSubscribeAndCoupon = function(openid, from, scene, fn) {
      var _this;
      _this = this;
      return async.series([
        function(cb) {
          return _this.weixinSubscribe(openid, function(err, res) {
            return cb(err, res);
          });
        }, function(cb) {
          return _this.weixinCoupon(openid, from, scene.replace("qrscene_", ""), function(err, res) {
            return cb(err, res);
          });
        }
      ], function(err, results) {
        return fn(null, results[1]);
      });
    };

    CustomerCtrl.weixinCoupon = function(openid, from, sceneid, fn) {
      return _getCustomerInfo(openid).then(function(customer) {
        return _getCoupon(customer._id, Marketing[sceneid].id);
      }, function(err) {
        return fn(err);
      }).then(function(coupon) {
        return fn(null, "<xml>\n<ToUserName><![CDATA[" + openid + "]]></ToUserName>\n<FromUserName><![CDATA[" + from + "]]></FromUserName>\n<CreateTime>" + (Date.now()) + "</CreateTime>\n<MsgType><![CDATA[news]]></MsgType>\n<ArticleCount>1</ArticleCount>\n<Articles>\n<item>\n<Title><![CDATA[您获得一张优惠券]]></Title>\n<Description><![CDATA[" + coupon.data.name + "]]></Description>\n<PicUrl><![CDATA[" + Marketing[sceneid].image + "]]></PicUrl>\n<Url><![CDATA[http://test.meitrip.net/couponDetail?id=" + coupon.data._id + "]]></Url>\n</item>\n</Articles>\n</xml>");
      }, function(err) {
        return fn(err);
      })["catch"](function(err) {
        return fn(err);
      });
    };

    _getCustomerInfo = function(openid) {
      var deferred, url;
      deferred = Q.defer();
      url = "" + config.inf.host + ":" + config.inf.port + "/api/customer/weixinLogin?ent=" + global.weixinEnt + "&openId=" + openid;
      request({
        url: url,
        timeout: 3000,
        method: "GET"
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return deferred.reject(err);
        } else {
          try {
            res = JSON.parse(body);
            if (res.error === 1) {
              return deferred.reject(new Error(res.errMsg));
            } else {
              return deferred.resolve(res.data);
            }
          } catch (_error) {
            error = _error;
            return deferred.reject(new Error("Parse Error"));
          }
        }
      });
      return deferred.promise;
    };

    _getCoupon = function(customer, marketing) {
      var deferred, url;
      deferred = Q.defer();
      url = "" + config.inf.host + ":" + config.inf.port + "/api/coupon/give";
      request({
        url: url,
        timeout: 3000,
        method: "POST",
        form: {
          ent: global.weixinEnt,
          customer: customer,
          marketing: marketing
        }
      }, function(err, response, body) {
        var error, res;
        if (err) {
          return deferred.reject(err);
        } else {
          try {
            res = JSON.parse(body);
            if (res.error === 1) {
              return deferred.reject(new Error(res.errMsg));
            } else {
              return deferred.resolve(res);
            }
          } catch (_error) {
            error = _error;
            return deferred.reject(new Error("Parse Error"));
          }
        }
      });
      return deferred.promise;
    };

    return CustomerCtrl;

  })();

  module.exports = CustomerCtrl;

}).call(this);
